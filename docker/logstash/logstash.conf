input {
    udp {
        port => 5555
    }
}
filter {
    #Mosquitto match
    grok {
        match => {"message" => [
            "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:systime} %{USER:container}\[%{INT}\]\: %{INT:timestamp}\: (?<mqtt_direction>((\bReceived\b)|(\bSending\b))) (?<mqtt_type>\b[A-Z]+\b) %{WORD} (?<mqtt_subject>\b[a-zA-Z0-9._-]+\b) %{GREEDYDATA:message}",
            "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:systime} %{USER:container}\[%{INT}\]\: %{INT:timestamp}\: (?<mqtt_direction>((\bReceived\b)|(\bSending\b))) (?<mqtt_type>\b[A-Z]+\b) %{WORD} (?<mqtt_subject>\b[a-zA-Z0-9._-]+\b)"
        ]}
        overwrite => [ "message" ]
        add_field => { "log_level" => "INFO" }
    }
    
    #Connectors match
    if !([log_level]) {
        grok {
            match => {"message" => 
                "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:systime} %{USER:container}\[%{INT}\]\: %{INT} \[%{GREEDYDATA}\] %{LOGLEVEL:log_level} %{JAVACLASS:class} \- %{WORD:sourceTopic} \-\> %{WORD:destinationTopic} \@ %{INT:timestamp}"
            }
            overwrite => [ "message" ]
            
            #the mosquitto match adds the "_grokparsefailure" tag
            remove_tag => [ "_grokparsefailure" ]
        }
    }
    
    #General match
    if !([log_level]) {
        grok {
             match => {"message" => [
                "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:systime} %{USER:container}\[%{INT}\]\: %{INT} \[%{GREEDYDATA}\] %{LOGLEVEL:log_level} %{JAVACLASS:class} \- %{INT:timestamp}\: %{GREEDYDATA:message}",
                "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:systime} %{USER:container}\[%{INT}\]\: %{INT} \[%{GREEDYDATA}\] %{LOGLEVEL:log_level} %{JAVACLASS:class} \- %{GREEDYDATA:message}"
            ]}
            overwrite => [ "message" ]
            
            #the mosquitto match adds the "_grokparsefailure" tag
            remove_tag => [ "_grokparsefailure" ]
        }
    }
    
    #Default match
    if !([log_level]) {
        grok {
            match => {"message" =>
                "%{GREEDYDATA:message}"
            }
            add_field => { 
                "log_level" => "ERROR" 
            }
        }
    }
}
output {
    elasticsearch {
        hosts => "elasticsearch:9200"
    }
    stdout {
        codec => "rubydebug"
    }
}